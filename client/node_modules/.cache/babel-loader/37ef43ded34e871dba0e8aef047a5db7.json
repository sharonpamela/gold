{"ast":null,"code":"var _jsxFileName = \"/Users/santana/Desktop/my-repos/projects/gold/client/src/Settings/CoinTile.js\";\nimport React from 'react';\nimport { AppContext } from \"../App/AppProvider\";\nimport { SelectableTile, DisabledTile, DeletableTile } from \"../Shared/Tile\";\nimport CoinHeaderGrid from './CoinHeaderGrid';\nimport CoinImage from '../Shared/CoinImage';\n\nfunction clickCoinHandler(topSection, coinKey, addCoin, removeCoin) {\n  return topSection ? function () {\n    removeCoin(coinKey);\n  } : function () {\n    addCoin(coinKey);\n  };\n}\n\nexport default function (_ref) {\n  var coinKey = _ref.coinKey,\n      topSection = _ref.topSection;\n  return React.createElement(AppContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, function (_ref2) {\n    var coinList = _ref2.coinList,\n        addCoin = _ref2.addCoin,\n        removeCoin = _ref2.removeCoin,\n        isInFavorites = _ref2.isInFavorites;\n    var coin = coinList[coinKey];\n    var TileClass = SelectableTile;\n\n    if (topSection) {\n      TileClass = DeletableTile;\n    } else if (isInFavorites(coinKey)) {\n      TileClass = DisabledTile;\n    }\n\n    return React.createElement(TileClass, {\n      onClick: clickCoinHandler(topSection, coinKey, addCoin, removeCoin),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(CoinHeaderGrid, {\n      topSection: topSection,\n      name: coin.CoinName,\n      symbol: coin.Symbol,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(CoinImage, {\n      coin: coin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  });\n}","map":{"version":3,"sources":["/Users/santana/Desktop/my-repos/projects/gold/client/src/Settings/CoinTile.js"],"names":["React","AppContext","SelectableTile","DisabledTile","DeletableTile","CoinHeaderGrid","CoinImage","clickCoinHandler","topSection","coinKey","addCoin","removeCoin","coinList","isInFavorites","coin","TileClass","CoinName","Symbol"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AACA,SAAQC,cAAR,EAAwBC,YAAxB,EAAsCC,aAAtC,QAA0D,gBAA1D;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;AAEA,SAASC,gBAAT,CAA0BC,UAA1B,EAAsCC,OAAtC,EAA+CC,OAA/C,EAAwDC,UAAxD,EAAmE;AACjE,SAAOH,UAAU,GAAG,YAAM;AACxBG,IAAAA,UAAU,CAACF,OAAD,CAAV;AACD,GAFgB,GAEb,YAAM;AACRC,IAAAA,OAAO,CAACD,OAAD,CAAP;AACD,GAJD;AAKD;;AAED,eAAe,gBAA+B;AAAA,MAArBA,OAAqB,QAArBA,OAAqB;AAAA,MAAZD,UAAY,QAAZA,UAAY;AAC5C,SAAO,oBAAC,UAAD,CAAY,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ,iBAAoD;AAAA,QAAlDI,QAAkD,SAAlDA,QAAkD;AAAA,QAAxCF,OAAwC,SAAxCA,OAAwC;AAAA,QAA/BC,UAA+B,SAA/BA,UAA+B;AAAA,QAAnBE,aAAmB,SAAnBA,aAAmB;AACnD,QAAIC,IAAI,GAAGF,QAAQ,CAACH,OAAD,CAAnB;AAEA,QAAIM,SAAS,GAAGb,cAAhB;;AACA,QAAGM,UAAH,EAAc;AACZO,MAAAA,SAAS,GAAGX,aAAZ;AACD,KAFD,MAEM,IAAGS,aAAa,CAACJ,OAAD,CAAhB,EAA0B;AAC9BM,MAAAA,SAAS,GAAGZ,YAAZ;AACD;;AAED,WAAO,oBAAC,SAAD;AACL,MAAA,OAAO,EAAEI,gBAAgB,CAACC,UAAD,EAAaC,OAAb,EAAsBC,OAAtB,EAA+BC,UAA/B,CADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGL,oBAAC,cAAD;AACE,MAAA,UAAU,EAAEH,UADd;AAEE,MAAA,IAAI,EAAEM,IAAI,CAACE,QAFb;AAGE,MAAA,MAAM,EAAEF,IAAI,CAACG,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHK,EAOL,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAEH,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPK,CAAP;AASD,GApBI,CAAP;AAsBD","sourcesContent":["import React from 'react';\nimport {AppContext} from \"../App/AppProvider\";\nimport {SelectableTile, DisabledTile, DeletableTile} from \"../Shared/Tile\";\nimport CoinHeaderGrid from './CoinHeaderGrid';\nimport CoinImage from '../Shared/CoinImage';\n\nfunction clickCoinHandler(topSection, coinKey, addCoin, removeCoin){\n  return topSection ? () => {\n    removeCoin(coinKey)\n  } : () => {\n    addCoin(coinKey)\n  }\n}\n\nexport default function({coinKey, topSection}){\n  return <AppContext.Consumer>\n    {({coinList, addCoin, removeCoin, isInFavorites}) => {\n      let coin = coinList[coinKey];\n\n      let TileClass = SelectableTile;\n      if(topSection){\n        TileClass = DeletableTile;\n      }else if(isInFavorites(coinKey)){\n        TileClass = DisabledTile;\n      }\n\n      return <TileClass\n        onClick={clickCoinHandler(topSection, coinKey, addCoin, removeCoin)}\n      >\n        <CoinHeaderGrid\n          topSection={topSection}\n          name={coin.CoinName}\n          symbol={coin.Symbol}/>\n        <CoinImage coin={coin}/>\n      </TileClass>\n    }}\n  </AppContext.Consumer>\n}\n"]},"metadata":{},"sourceType":"module"}