{"ast":null,"code":"import _objectSpread from \"/Users/santana/Desktop/my-repos/projects/gold/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/santana/Desktop/my-repos/projects/gold/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/santana/Desktop/my-repos/projects/gold/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/santana/Desktop/my-repos/projects/gold/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/santana/Desktop/my-repos/projects/gold/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/santana/Desktop/my-repos/projects/gold/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/santana/Desktop/my-repos/projects/gold/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/santana/Desktop/my-repos/projects/gold/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/santana/Desktop/my-repos/projects/gold/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/santana/Desktop/my-repos/projects/gold/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/santana/Desktop/my-repos/projects/gold/client/src/App/AppProvider.js\";\nimport React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport API from \"../utils/API\";\n\nvar cc = require('cryptocompare');\n\nexport var AppContext = React.createContext();\nvar MAX_FAVORITES = 10; // max num of fav tiles displayed\n\nvar TIME_UNITS = 10; // data pts for the graph\n\nexport var AppProvider =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AppProvider, _React$Component);\n\n  function AppProvider(props) {\n    var _this;\n\n    _classCallCheck(this, AppProvider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AppProvider).call(this, props));\n\n    _this.componentDidMount = function () {\n      _this.fetchCoins();\n\n      _this.fetchPrices();\n\n      _this.fetchHistorical();\n    };\n\n    _this.fetchCoins =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var coinList;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return cc.coinList();\n\n            case 2:\n              coinList = _context.sent.Data;\n\n              _this.setState({\n                coinList: coinList\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.fetchPrices =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var prices;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!_this.state.firstVisit) {\n                _context2.next = 2;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 2:\n              _context2.next = 4;\n              return _this.prices();\n\n            case 4:\n              prices = _context2.sent;\n\n              _this.setState({\n                prices: prices\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    _this.fetchHistorical =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var results, historical;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!_this.state.firstVisit) {\n                _context3.next = 2;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 2:\n              _context3.next = 4;\n              return _this.historical();\n\n            case 4:\n              results = _context3.sent;\n              historical = [{\n                name: _this.state.currentFavorite,\n                data: results.map(function (ticker, index) {\n                  return [moment().subtract(_defineProperty({}, _this.state.timeInterval, TIME_UNITS - index)).valueOf(), ticker.USD];\n                })\n              }];\n\n              _this.setState({\n                historical: historical\n              });\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    _this.prices =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var returnData, i, priceData;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              returnData = [];\n              i = 0;\n\n            case 2:\n              if (!(i < _this.state.favorites.length)) {\n                _context4.next = 16;\n                break;\n              }\n\n              _context4.prev = 3;\n              _context4.next = 6;\n              return cc.priceFull(_this.state.favorites[i], 'USD');\n\n            case 6:\n              priceData = _context4.sent;\n              returnData.push(priceData);\n              _context4.next = 13;\n              break;\n\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](3);\n              console.warn('Fetch price error: ', _context4.t0);\n\n            case 13:\n              i++;\n              _context4.next = 2;\n              break;\n\n            case 16:\n              return _context4.abrupt(\"return\", returnData);\n\n            case 17:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[3, 10]]);\n    }));\n\n    _this.historical = function () {\n      var promises = [];\n\n      for (var units = TIME_UNITS; units > 0; units--) {\n        promises.push(cc.priceHistorical(_this.state.currentFavorite, ['USD'], moment().subtract(_defineProperty({}, _this.state.timeInterval, units)).toDate()));\n      }\n\n      return Promise.all(promises);\n    };\n\n    _this.addCoin =\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(key) {\n        var favorites;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                favorites = _toConsumableArray(_this.state.favorites);\n\n                if (favorites.length < MAX_FAVORITES) {\n                  favorites.push(key);\n\n                  _this.setState({\n                    favorites: favorites\n                  });\n                }\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    _this.removeCoin = function (key) {\n      var favorites = _toConsumableArray(_this.state.favorites);\n\n      _this.setState({\n        favorites: _.pull(favorites, key)\n      });\n    };\n\n    _this.isInFavorites = function (key) {\n      return _.includes(_this.state.favorites, key);\n    };\n\n    _this.confirmFavorites = function () {\n      var currentFavorite = _this.state.favorites[0];\n\n      _this.setState({\n        firstVisit: false,\n        page: 'dashboard',\n        currentFavorite: currentFavorite,\n        prices: null,\n        historical: null\n      }, function () {\n        _this.fetchPrices();\n\n        _this.fetchHistorical();\n      });\n\n      localStorage.setItem('cryptoDash', JSON.stringify({\n        favorites: _this.state.favorites,\n        currentFavorite: currentFavorite\n      }));\n    };\n\n    _this.setCurrentFavorite = function (sym) {\n      _this.setState({\n        currentFavorite: sym,\n        historical: null\n      }, _this.fetchHistorical);\n\n      localStorage.setItem('cryptoDash', JSON.stringify(_objectSpread({}, JSON.parse(localStorage.getItem('cryptoDash')), {\n        currentFavorite: sym\n      })));\n    };\n\n    _this.setPage = function (page) {\n      return _this.setState({\n        page: page\n      });\n    };\n\n    _this.setFilteredCoins = function (filteredCoins) {\n      return _this.setState({\n        filteredCoins: filteredCoins\n      });\n    };\n\n    _this.changeChartSelect = function (value) {\n      _this.setState({\n        timeInterval: value,\n        historical: null\n      }, _this.fetchHistorical);\n    };\n\n    _this.state = _objectSpread({\n      page: 'dashboard',\n      favorites: ['BTC', 'ETH', 'XMR', 'DOGE'],\n      timeInterval: 'months'\n    }, _this.savedSettings(), {\n      // when called will spread results over prev props\n      setPage: _this.setPage,\n      // this determines which page content to display (settings or dash)\n      addCoin: _this.addCoin,\n      removeCoin: _this.removeCoin,\n      isInFavorites: _this.isInFavorites,\n      confirmFavorites: _this.confirmFavorites,\n      setCurrentFavorite: _this.setCurrentFavorite,\n      setFilteredCoins: _this.setFilteredCoins,\n      changeChartSelect: _this.changeChartSelect\n    });\n    return _this;\n  }\n\n  _createClass(AppProvider, [{\n    key: \"savedSettings\",\n    value: function savedSettings() {\n      var cryptoDashData = JSON.parse(localStorage.getItem('cryptoDash'));\n\n      if (!cryptoDashData) {\n        return {\n          page: 'settings',\n          firstVisit: true\n        };\n      }\n\n      var favorites = cryptoDashData.favorites,\n          currentFavorite = cryptoDashData.currentFavorite;\n      return {\n        favorites: favorites,\n        currentFavorite: currentFavorite\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(AppContext.Provider, {\n        value: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, this.props.children);\n    }\n  }]);\n\n  return AppProvider;\n}(React.Component);","map":{"version":3,"sources":["/Users/santana/Desktop/my-repos/projects/gold/client/src/App/AppProvider.js"],"names":["React","_","moment","API","cc","require","AppContext","createContext","MAX_FAVORITES","TIME_UNITS","AppProvider","props","componentDidMount","fetchCoins","fetchPrices","fetchHistorical","coinList","Data","setState","state","firstVisit","prices","historical","results","name","currentFavorite","data","map","ticker","index","subtract","timeInterval","valueOf","USD","returnData","i","favorites","length","priceFull","priceData","push","console","warn","promises","units","priceHistorical","toDate","Promise","all","addCoin","key","removeCoin","pull","isInFavorites","includes","confirmFavorites","page","localStorage","setItem","JSON","stringify","setCurrentFavorite","sym","parse","getItem","setPage","setFilteredCoins","filteredCoins","changeChartSelect","value","savedSettings","cryptoDashData","children","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport API from \"../utils/API\";\nconst cc = require('cryptocompare');\n\nexport const AppContext = React.createContext();\n\nconst MAX_FAVORITES = 10; // max num of fav tiles displayed\nconst TIME_UNITS = 10; // data pts for the graph\n\nexport class AppProvider extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      page: 'dashboard',\n      favorites: ['BTC', 'ETH', 'XMR', 'DOGE'],\n      timeInterval: 'months',\n      ...this.savedSettings(),// when called will spread results over prev props\n      setPage: this.setPage, // this determines which page content to display (settings or dash)\n      addCoin: this.addCoin,\n      removeCoin: this.removeCoin,\n      isInFavorites: this.isInFavorites,\n      confirmFavorites: this.confirmFavorites,\n      setCurrentFavorite: this.setCurrentFavorite,\n      setFilteredCoins: this.setFilteredCoins,\n      changeChartSelect: this.changeChartSelect\n    }\n  }\n\n  componentDidMount = () => {\n    this.fetchCoins();\n    this.fetchPrices();\n    this.fetchHistorical();\n  }\n\n  fetchCoins = async () => {\n    let coinList = (await cc.coinList()).Data;\n    this.setState({coinList});\n  }\n\n  fetchPrices = async () => {\n    if(this.state.firstVisit) return;\n    let prices = await this.prices();\n    this.setState({prices});\n  }\n\n  fetchHistorical = async () => {\n    if (this.state.firstVisit) return;\n    let results = await this.historical();\n    let historical = [\n      {\n        name: this.state.currentFavorite,\n        data: results.map((ticker, index) => [\n          moment().subtract({[this.state.timeInterval]: TIME_UNITS - index}).valueOf(),\n          ticker.USD\n        ])\n      }\n    ]\n    this.setState({historical});\n  }\n\n  prices = async () => {\n    let returnData = [];\n    for(let i = 0; i < this.state.favorites.length; i++){\n      try {\n        let priceData = await cc.priceFull(this.state.favorites[i], 'USD');\n        returnData.push(priceData);\n      } catch (e){\n        console.warn('Fetch price error: ', e);\n      }\n    }\n    return returnData;\n  }\n\n  historical = () => {\n    let promises = [];\n    for (let units = TIME_UNITS; units > 0; units--){\n      promises.push(\n        cc.priceHistorical(\n          this.state.currentFavorite,\n          ['USD'],\n          moment()\n          .subtract({[this.state.timeInterval]: units})\n          .toDate()\n        )\n      )\n    }\n    return Promise.all(promises);\n  }\n\n  addCoin = async key => {\n    let favorites = [...this.state.favorites];\n    if(favorites.length < MAX_FAVORITES){\n      favorites.push(key);\n      this.setState({favorites});\n    }\n  }\n\n  removeCoin = key => {\n    let favorites = [...this.state.favorites];\n    this.setState({favorites: _.pull(favorites, key)})\n  }\n\n  isInFavorites = key => _.includes(this.state.favorites, key)\n\n  confirmFavorites = () => {\n    let currentFavorite = this.state.favorites[0];\n    this.setState({\n      firstVisit: false,\n      page: 'dashboard',\n      currentFavorite,\n      prices: null,\n      historical: null\n    }, () => {\n        this.fetchPrices();\n        this.fetchHistorical();\n    });\n    localStorage.setItem('cryptoDash', JSON.stringify({\n      favorites: this.state.favorites,\n      currentFavorite\n    }));\n  }\n\n  setCurrentFavorite = (sym) => {\n    this.setState({\n      currentFavorite: sym,\n      historical: null\n    }, this.fetchHistorical);\n\n    localStorage.setItem('cryptoDash', JSON.stringify({\n      ...JSON.parse(localStorage.getItem('cryptoDash')),\n      currentFavorite: sym\n    }))\n  }\n\n  savedSettings(){\n    let cryptoDashData = JSON.parse(localStorage.getItem('cryptoDash'));\n    if(!cryptoDashData){\n      return {page: 'settings', firstVisit: true}\n    }\n    let {favorites, currentFavorite} = cryptoDashData;\n    return {favorites, currentFavorite};\n  }\n\n  setPage = page => this.setState({page})\n\n  setFilteredCoins = (filteredCoins) => this.setState({filteredCoins})\n\n  changeChartSelect = (value) => {\n    this.setState({timeInterval: value, historical: null}, this.fetchHistorical);\n  }\n\n  render(){\n    return (\n      <AppContext.Provider value={this.state}>\n        {this.props.children}\n      </AppContext.Provider>\n    )\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}