{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/santana/Desktop/my-repos/projects/gold/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/santana/Desktop/my-repos/projects/gold/client/src/Settings/CoinGrid.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: grid;   \\n  grid-template-columns: repeat(auto-fill, minmax(130px, 1fr)); \\n  grid-gap: 15px; \\n  margin-top: 40px; \\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { AppContext } from \"../App/AppProvider\";\nimport CoinTile from \"./CoinTile\";\nexport var CoinGridStyled = styled.div(_templateObject());\n\nfunction getLowerSectionCoins(coinList, filteredCoins) {\n  return filteredCoins && Object.keys(filteredCoins) || Object.keys(coinList).slice(0, 100);\n}\n\nfunction getCoinsToDisplay(coinList, topSection, favorites, filterCoins) {\n  return topSection ? favorites : getLowerSectionCoins(coinList, filterCoins);\n}\n\nexport default function (_ref) {\n  var topSection = _ref.topSection;\n  return React.createElement(AppContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, function (_ref2) {\n    var coinList = _ref2.coinList,\n        favorites = _ref2.favorites,\n        filteredCoins = _ref2.filteredCoins;\n    return React.createElement(CoinGridStyled, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, getCoinsToDisplay(coinList, topSection, favorites, filteredCoins).map(function (coinKey) {\n      return React.createElement(CoinTile, {\n        key: coinKey,\n        topSection: topSection,\n        coinKey: coinKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      });\n    }));\n  });\n}","map":{"version":3,"sources":["/Users/santana/Desktop/my-repos/projects/gold/client/src/Settings/CoinGrid.js"],"names":["React","styled","AppContext","CoinTile","CoinGridStyled","div","getLowerSectionCoins","coinList","filteredCoins","Object","keys","slice","getCoinsToDisplay","topSection","favorites","filterCoins","map","coinKey"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAO,IAAMC,cAAc,GAAGH,MAAM,CAACI,GAAV,mBAApB;;AAOP,SAASC,oBAAT,CAA8BC,QAA9B,EAAwCC,aAAxC,EAAsD;AACpD,SAAQA,aAAa,IAAIC,MAAM,CAACC,IAAP,CAAYF,aAAZ,CAAlB,IACLC,MAAM,CAACC,IAAP,CAAYH,QAAZ,EAAsBI,KAAtB,CAA4B,CAA5B,EAA+B,GAA/B,CADF;AAED;;AAED,SAASC,iBAAT,CAA2BL,QAA3B,EAAqCM,UAArC,EAAiDC,SAAjD,EAA4DC,WAA5D,EAAwE;AACtE,SAAOF,UAAU,GAAGC,SAAH,GAAeR,oBAAoB,CAACC,QAAD,EAAWQ,WAAX,CAApD;AACD;;AAED,eAAe,gBAAuB;AAAA,MAAZF,UAAY,QAAZA,UAAY;AACpC,SACE,oBAAC,UAAD,CAAY,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA,QAAEN,QAAF,SAAEA,QAAF;AAAA,QAAYO,SAAZ,SAAYA,SAAZ;AAAA,QAAuBN,aAAvB,SAAuBA,aAAvB;AAAA,WACC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGI,iBAAiB,CAACL,QAAD,EAAWM,UAAX,EAAuBC,SAAvB,EAAkCN,aAAlC,CAAjB,CAAkEQ,GAAlE,CAAsE,UAAAC,OAAO;AAAA,aAC5E,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,OAAf;AAAwB,QAAA,UAAU,EAAEJ,UAApC;AAAgD,QAAA,OAAO,EAAEI,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD4E;AAAA,KAA7E,CADH,CADD;AAAA,GADD,CADF;AAWD","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport {AppContext} from \"../App/AppProvider\";\nimport CoinTile from \"./CoinTile\";\n\nexport const CoinGridStyled = styled.div`\n  display: grid;   \n  grid-template-columns: repeat(auto-fill, minmax(130px, 1fr)); \n  grid-gap: 15px; \n  margin-top: 40px; \n`\n\nfunction getLowerSectionCoins(coinList, filteredCoins){\n  return (filteredCoins && Object.keys(filteredCoins)) ||\n    Object.keys(coinList).slice(0, 100)\n}\n\nfunction getCoinsToDisplay(coinList, topSection, favorites, filterCoins){\n  return topSection ? favorites : getLowerSectionCoins(coinList, filterCoins);\n}\n\nexport default function ({topSection}){\n  return (\n    <AppContext.Consumer>\n    {({coinList, favorites, filteredCoins}) => (\n      <CoinGridStyled>\n        {getCoinsToDisplay(coinList, topSection, favorites, filteredCoins).map(coinKey =>\n          <CoinTile key={coinKey} topSection={topSection} coinKey={coinKey}/>\n        )}\n      </CoinGridStyled>\n    )}\n  </AppContext.Consumer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}